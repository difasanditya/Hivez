import React, {useContext, useState} from 'react';
import ImagePicker from 'react-native-image-crop-picker';
import {LocalizationContext} from '../utils/language.utils';
import {createDate, currentDate} from '../utils/date.utils';
import {isRequestDescriptionValid} from '../utils/validator.utils';
import CreateGroupTransaction from '../components/Transaction/CreateGroupTransaction.component';

const CreateGroupTransactionPage = ({route, navigation}) => {
	const { groupID } = route.params;

	const groupDetailDummy = {
		id: 'GROUP0001',
		image: '',
		name: 'Lelaki Fearless'
	}

	const {translations, initializeAppLanguage} = useContext(LocalizationContext);
	initializeAppLanguage();

	const [groupDetail, setGroupDetail] = useState(groupDetailDummy);
	const [type, setType] = useState('DEBIT');
	const [value, setValue] = useState('');
	const [date, setDate] = useState(currentDate);
	const [time, setTime] = useState(currentDate);
	const [description, setDescription] = useState('');
	const [image, setImage] = useState('');
	const [nextButtonAccessbility, setNextButtonAccessbility] = useState(false);

	const validateNextButton = (value, date, time, description) => {
		setNextButtonAccessbility(value !== '' && date !== '' && time != '' && isRequestDescriptionValid(description).isValid);
	};

	const onChangeType = (type) => {
		setType(type);
	};

	const onChangeValue = (value) => {
		setValue(value);
		validateNextButton(value, date, time, description);
	};

	const onChangeDate = (date) => {
		setDate(date);
		validateNextButton(value, date, time, description);
	};

	const onChangeTime = (time) => {
		setTime(time);
		validateNextButton(value, date, time, description);
	};

	const onChangeDescription = (description) => {
		setDescription(description);
		validateNextButton(value, date, time, description);
	};


	const changeImage = (image) => {
		setImage(image.data);
		ImagePicker.clean().then(() => {
		}).catch(e => {
			console.log(e);
		})
	};

	const deleteImage = () => {
		setImage('');
	};

	const pickerOption = {
		compressImageQuality: 0.8,
		cropping: true,
		cropperCancelText: translations['DropdownChangePicture']['CANCEL'],
		cropperChooseText : translations['DropdownChangePicture']['SAVE'],
		cropperToolbarTitle: translations['DropdownChangePicture']['SELECT_PROFILE_PICTURE'],
		includeBase64: true,
		mediaType: 'photo'
	};

	const openLibrary = () => {
		ImagePicker.openPicker(pickerOption).then(image => {
			changeImage(image);
		}).catch(e => {
			console.log(e);
		});
	};

	const openCamera = () => {
		ImagePicker.openCamera(pickerOption).then(image => {
			changeImage(image);
		}).catch(e => {
			console.log(e);
		});
	};

	const onChangeImageDropdown = (value) => {
		switch (value) {
			case 'TAKE_PHOTO':
				openCamera();
				break;
			case 'CHOOSE_FROM_LIBRARY':
				openLibrary();
				break;
			case 'DELETE_PROFILE_PICTURE':
				deleteImage();
				break;
			default:
				console.log('Error!');
				break;
		}
	};

	const createGroupTransaction = () => {
		navigation.pop();
		const formattedDate = createDate(date);
		const formattedTime = createDate(time);
		alert(`Create transaction for: ${groupID} with type: ${type}, value: ${value}, date: ${formattedDate}, time: ${formattedTime}, desc: ${description}`);
	};

	const goBack = () => {
		navigation.pop();
	}

	return (
		<CreateGroupTransaction
			contentText={translations['CreateGroupTransaction']}
			descriptionText={translations['RequestDescriptionValidation']}
			groupDetail={groupDetail}
			type={type}
			setType={onChangeType}
			value={value}
			setValue={onChangeValue}
			date={date}
			setDate={onChangeDate}
			time={time}
			setTime={onChangeTime}
			description={description}
			setDescription={onChangeDescription}
			validateDescription={isRequestDescriptionValid}
			image={image}
			nextButtonAccessbility={nextButtonAccessbility}
			confirmCreateText={translations['ConfirmCreateTransaction']}
			dropdownChangePictureContext={translations['DropdownChangePicture']}
			onChangeImageDropdown={onChangeImageDropdown}
			goBack={goBack}
			createGroupTransaction={createGroupTransaction} />
	);
};

export default CreateGroupTransactionPage;